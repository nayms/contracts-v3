// SPDX-License-Identifier: MIT
pragma solidity 0.8.20;

/// ------------------------------------------------------------------------------------------------------------
///
/// NOTE: this file is auto-generated by prep-upgrade.js, please DO NOT modify it directly. Unless you want to :)
///
/// ------------------------------------------------------------------------------------------------------------

import { IDiamondCut } from "lib/diamond-2-hardhats/nayms/INayms.sol";
import "script/utils/DeploymentHelpers.sol";

contract S03UpgradeDiamond is DeploymentHelpers {
    using stdJson for string;

    function run(address _ownerAddress) external {
        INayms nayms = INayms(getDiamondAddressFromFile());

        if (_ownerAddress == address(0)) {
            _ownerAddress = nayms.owner();
        }

        string memory path = "broadcast/S01DeployContract.s.sol/31337/run-latest.json";
        string memory json = vm.readFile(path);
        bytes memory rawTxReturn = json.parseRaw(".returns.cut");
        TxReturn memory txReturn = abi.decode(rawTxReturn, (TxReturn));
        assertEq(txReturn.internalType, "struct IDiamondCut.FacetCut[]", "not the correct cut struct type");

        IDiamondCut.FacetCut[] memory cut = new IDiamondCut.FacetCut[](1);

        bytes4[] memory f0 = new bytes4[](1);
        f0[0] = 0x1f931c1c;
        cut[0] = IDiamondCut.FacetCut({facetAddress: 0x54405B827d4E17C92AAeaD617d89b53e67a1b391, action: IDiamondCut.FacetCutAction.Replace, functionSelectors: f0});
    
        vm.startBroadcast(_ownerAddress);
        nayms.diamondCut(cut, address(0), new bytes(0));
        vm.stopBroadcast();
    }
}
